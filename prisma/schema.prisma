
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  id     String @id @default(uuid())
  name   String
  userId String

  products   Product[]   @relation("StoreToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   String @id @default(uuid())
  name String
  products Product[] @relation("CategoryToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id    String @id @default(uuid())
  name  String
  value String
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id    String @id @default(uuid())
  name  String
  value String
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id         String  @id @default(uuid())
  name       String
  description String? // 추가
  sku        String? @unique // 추가: 상품 고유 코드

  stores StoreToProduct[] // 변경된 부분
  images Image[]

  categoryId String
  category   Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  sizeId     String
  size       Size     @relation(fields: [sizeId], references: [id])
  colorId    String
  color      Color    @relation(fields: [colorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image {
  id  String @id @default(uuid())
  url String

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}